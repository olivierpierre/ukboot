diff -Naur -x .git /tmp/popcorn-xen/extras/mini-os/arch/x86/setup.c ./arch/x86/setup.c
--- /tmp/popcorn-xen/extras/mini-os/arch/x86/setup.c	2016-07-22 12:00:46.472000000 -0400
+++ ./arch/x86/setup.c	2016-07-20 11:44:11.416000000 -0400
@@ -31,6 +31,9 @@
 #include <mini-os/kernel.h>
 #include <xen/xen.h>
 
+#include "rdtsc.h"
+#include "boot_measure.h"
+
 /*
  * Shared page for communicating with the hypervisor.
  * Events flags go here, for example.
@@ -97,6 +100,7 @@
 arch_init(start_info_t *si)
 {
 	static char hello[] = "Bootstrapping...\n";
+    bootmeasure1 = rdtsc();
 
 	(void)HYPERVISOR_console_io(CONSOLEIO_write, strlen(hello), hello);
 
diff -Naur -x .git /tmp/popcorn-xen/extras/mini-os/include/boot_measure.h ./include/boot_measure.h
--- /tmp/popcorn-xen/extras/mini-os/include/boot_measure.h	1969-12-31 19:00:00.000000000 -0500
+++ ./include/boot_measure.h	2016-07-20 11:39:57.988000000 -0400
@@ -0,0 +1,6 @@
+#ifndef BOOT_MEASURE_H
+#define BOOT_MEASURE_H
+
+unsigned long long bootmeasure1, bootmeasure2;
+
+#endif /* BOOT_MEASURE_H */
diff -Naur -x .git /tmp/popcorn-xen/extras/mini-os/include/rdtsc.h ./include/rdtsc.h
--- /tmp/popcorn-xen/extras/mini-os/include/rdtsc.h	1969-12-31 19:00:00.000000000 -0500
+++ ./include/rdtsc.h	2016-07-20 11:40:53.848000000 -0400
@@ -0,0 +1,56 @@
+#ifndef __RDTSC_H_DEFINED__
+#define __RDTSC_H_DEFINED__
+
+
+#if defined(__i386__)
+
+static __inline__ unsigned long long rdtsc(void)
+{
+  unsigned long long int x;
+     __asm__ volatile (".byte 0x0f, 0x31" : "=A" (x));
+     return x;
+}
+#elif defined(__x86_64__)
+
+static __inline__ unsigned long long rdtsc(void)
+{
+  unsigned hi, lo;
+  __asm__ __volatile__ ("rdtsc" : "=a"(lo), "=d"(hi));
+  return ( (unsigned long long)lo)|( ((unsigned long long)hi)<<32 );
+}
+
+#elif defined(__powerpc__)
+
+static __inline__ unsigned long long rdtsc(void)
+{
+  unsigned long long int result=0;
+  unsigned long int upper, lower,tmp;
+  __asm__ volatile(
+                "0:                  \n"
+                "\tmftbu   %0           \n"
+                "\tmftb    %1           \n"
+                "\tmftbu   %2           \n"
+                "\tcmpw    %2,%0        \n"
+                "\tbne     0b         \n"
+                : "=r"(upper),"=r"(lower),"=r"(tmp)
+                );
+  result = upper;
+  result = result<<32;
+  result = result|lower;
+
+  return(result);
+}
+
+#else
+
+#error "No tick counter is available!"
+
+#endif
+
+
+/*  $RCSfile:  $   $Author: kazutomo $
+ *  $Revision: 1.6 $  $Date: 2005/04/13 18:49:58 $
+ */
+
+#endif
+
diff -Naur -x .git /tmp/popcorn-xen/extras/mini-os/main.c ./main.c
--- /tmp/popcorn-xen/extras/mini-os/main.c	2016-07-22 12:00:46.480000000 -0400
+++ ./main.c	2016-07-20 11:45:35.496000000 -0400
@@ -17,6 +17,9 @@
 #include <events.h>
 #include <mini-os/lib.h>
 
+#include <rdtsc.h>
+#include <boot_measure.h>
+
 extern int main(int argc, char *argv[], char *envp[]);
 extern void __libc_init_array(void);
 extern void __libc_fini_array(void);
@@ -186,6 +189,7 @@
 
 int app_main(start_info_t *si)
 {
+    bootmeasure2 = rdtsc();
     printk("main.c: dummy main: start_info=%p\n", si);
     main_thread = create_thread("main", call_main, si);
     return 0;
